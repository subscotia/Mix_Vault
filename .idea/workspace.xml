<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0f5293e2-f8c9-45e3-9466-0d840ec8e439" name="Changes" comment="Git Commit Journal EntrySubject: Phase 4 Complete - Data Management InterfaceDate: 30 July 2025Summary:This commit marks the successful completion of Phase 4. The application has been extended from a read-only tool to a fully-fledged data management interface. A user can now add new plugin entries directly through the web UI, with the data being safely processed and saved on the backend.Task 4.1: &quot;Add New Plugin&quot; Form UI:A new &quot;Add Plugin&quot; button was added to the header.A comprehensive modal form was designed and built with input fields for all necessary plugin data, adhering to our established themes.Task 4.2: Backend API Endpoint:A new API endpoint (/api/plugin) was created in the Flask application, configured to accept POST requests.The endpoint was successfully tested to receive and parse JSON data submitted from the frontend form.Task 4.3: Save Logic Implementation:A shared utils.py module was created to house a save_vault_with_backup function, adhering to our &quot;safe save&quot; best practice.The backend was enhanced with logic to generate a new, globally unique ID for each submitted plugin, following the schema in VAULT_GUIDE.md.The /api/plugin endpoint now uses these utilities to append the new plugin to the vault_master.json file and create a timestamped backup.Task 4.4: Auto-Refresh UI:The frontend JavaScript was updated to handle the success response from the backend.Upon a successful save, the application now automatically adds the new plugin to its in-memory data, re-populates the filter lists, and re-renders the main plugin grid without requiring a page reload.A significant ReferenceError was diagnosed and resolved, leading to a more robust, correctly-scoped script structure.The application's core feature set for local management is now complete. The project is ready to proceed to the final phase: production deployment.">
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vault_project.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vault_project.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="HTML File" />
        <option value="Python Script" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Drew Campbell &lt;drew@subscotia.net&gt;" />
      </list>
    </option>
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/" />
    <option name="RESET_MODE" value="HARD" />
    <option name="SIGN_OFF_COMMIT" value="true" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;subscotia&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/subscotia/Studio_Vault.git&quot;,
    &quot;accountId&quot;: &quot;d3b6e46f-b749-4d4b-b8bb-e3a479cdac62&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2zmyB0KyTpPNbFKbIGtP19K34Q1" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="foldersAlwaysOnTop" value="false" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="sortKey" value="BY_TIME_DESCENDING" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Python.app.executor&quot;: &quot;Run&quot;,
    &quot;Python.assign_master_ids.executor&quot;: &quot;Run&quot;,
    &quot;Python.find_key_value.executor&quot;: &quot;Run&quot;,
    &quot;Python.find_max_catalog_id.executor&quot;: &quot;Run&quot;,
    &quot;Python.format_json.executor&quot;: &quot;Run&quot;,
    &quot;Python.list_unique_families.executor&quot;: &quot;Run&quot;,
    &quot;Python.list_unique_tags.executor&quot;: &quot;Run&quot;,
    &quot;Python.list_unique_types.executor&quot;: &quot;Run&quot;,
    &quot;Python.list_unique_values_REFACT.executor&quot;: &quot;Run&quot;,
    &quot;Python.merge_list_values.executor&quot;: &quot;Run&quot;,
    &quot;Python.merge_master_vaults.executor&quot;: &quot;Run&quot;,
    &quot;Python.remove_value_from_list_field.executor&quot;: &quot;Run&quot;,
    &quot;Python.replace_any_tag.executor&quot;: &quot;Run&quot;,
    &quot;Python.replace_family_labels.executor&quot;: &quot;Run&quot;,
    &quot;Python.reset_ids.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;Shell Script.Tailwind Watcher.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;F:/Studio/Admin Ops/Operations/git/vault_project&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\drewp\\AppData\\Local\\Programs\\PyCharm\\plugins\\javascript-plugin\\jsLanguageServicesImpl\\external&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="F:\Studio\Admin Ops\Operations\git\vault_project\html" />
      <recent name="F:\Studio\Admin Ops\Operations\git\vault_project\scripts" />
    </key>
  </component>
  <component name="RunManager" selected="Python.app">
    <configuration name="app" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="vault_project" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/webapp" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/webapp/app.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="find_max_catalog_id" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="vault_project" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/find_max_catalog_id.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="list_unique_types" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="vault_project" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/list_unique_types.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="merge_master_vaults" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="vault_project" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/merge_master_vaults.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="reset_ids" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="vault_project" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/reset_ids.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Tailwind Watcher" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="false" />
      <option name="SCRIPT_PATH" value="&quot;$PROJECT_DIR$/tailwindcss.exe&quot;" />
      <option name="SCRIPT_OPTIONS" value="-i .\webapp\static\input.css -o .\webapp\static\output.css --watch" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="&quot;$PROJECT_DIR$&quot;" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="powershell.exe" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="true" />
      <option name="EXECUTE_SCRIPT_FILE" value="true" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.app" />
      <item itemvalue="Python.find_max_catalog_id" />
      <item itemvalue="Python.list_unique_types" />
      <item itemvalue="Python.merge_master_vaults" />
      <item itemvalue="Python.reset_ids" />
      <item itemvalue="Shell Script.Tailwind Watcher" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.app" />
        <item itemvalue="Python.find_max_catalog_id" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-PY-251.26927.90" />
        <option value="bundled-python-sdk-41e8cd69c857-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.90" />
      </set>
    </attachedChunks>
  </component>
  <component name="SvnConfiguration">
    <configuration>C:\Users\drewp\AppData\Roaming\Subversion</configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0f5293e2-f8c9-45e3-9466-0d840ec8e439" name="Changes" comment="" />
      <created>1752350403783</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752350403783</updated>
      <workItem from="1752523846050" duration="3209000" />
      <workItem from="1752532754925" duration="4389000" />
      <workItem from="1752565708015" duration="16288000" />
      <workItem from="1752609259474" duration="1202000" />
      <workItem from="1752620765109" duration="124000" />
      <workItem from="1752671545506" duration="2445000" />
      <workItem from="1752674082788" duration="1812000" />
      <workItem from="1753124842462" duration="6224000" />
      <workItem from="1753187492560" duration="7522000" />
      <workItem from="1753356976477" duration="4370000" />
      <workItem from="1753479351918" duration="5000" />
      <workItem from="1753480657778" duration="271000" />
      <workItem from="1753528335792" duration="66000" />
      <workItem from="1753528424876" duration="148000" />
      <workItem from="1753541643022" duration="67000" />
      <workItem from="1753541785813" duration="9117000" />
      <workItem from="1753710716658" duration="1528000" />
      <workItem from="1753712548660" duration="740000" />
      <workItem from="1753896257080" duration="9995000" />
      <workItem from="1753950139665" duration="4749000" />
      <workItem from="1753955272624" duration="14178000" />
      <workItem from="1754064371621" duration="14000" />
      <workItem from="1754083145581" duration="1463000" />
      <workItem from="1754127097426" duration="2809000" />
      <workItem from="1754149213330" duration="2447000" />
    </task>
    <task id="LOCAL-00001" summary="Work Report: 15 July 2025&#10;Milestone Reached: Backend Data Buildout Complete&#10;&#10;This commit marks the completion of the data population and cleaning phase for the Subscotia Vault. The ivault and xvault are now finalized and have been merged into a single, definitive vault_master.json. All objects have been assigned a final, globally unique ID according to the established convention.&#10;&#10;Key Achievements in this Commit:&#10;&#10;Project Structure &amp; Best Practices:&#10;&#10;Transitioned the project to a professional directory structure (/data, /scripts, /archive) to enforce separation of concerns.&#10;&#10;Authored the DEVELOPMENT_GUIDE.md, formalizing our coding standards, Git workflow, and architectural principles.&#10;&#10;Upgraded the development workflow to use the integrated Git client within the PyCharm Professional IDE.&#10;&#10;Final Data Consolidation:&#10;&#10;Developed and executed robust scripts to merge the two vaults (merge_master_vaults_with_logging.py), creating a detailed log of the process.&#10;&#10;Developed and executed the final ID assignment script (assign_master_ids.py) to apply globally unique IDs to all 3,808 objects in the master vault.&#10;&#10;Successfully debugged runtime errors during the ID assignment process, making the script more robust against inconsistent data types.&#10;&#10;Documentation &amp; Toolkit Refinement:&#10;&#10;Updated the project's README.md to reflect the current status.&#10;&#10;Updated the re-initialization prompt to mark the completion of the data buildout milestone.&#10;&#10;Added the official ID Naming Convention to the VAULT_GUIDE.md.&#10;&#10;Created several new utility scripts, including a dedicated JSON formatter and a powerful, read-only search tool (find_key_value.py).&#10;&#10;With the backend data now stable and complete, the project is officially ready to move into Phase 1: Web Application Development.">
      <option name="closed" value="true" />
      <created>1752595646161</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1752595646161</updated>
    </task>
    <task id="LOCAL-00002" summary="Work Report: 15 July 2025&#10;Milestone Reached: Backend Data Buildout Complete&#10;&#10;This commit marks the completion of the data population and cleaning phase for the Subscotia Vault. The ivault and xvault are now finalized and have been merged into a single, definitive vault_master.json. All objects have been assigned a final, globally unique ID according to the established convention.&#10;&#10;Key Achievements in this Commit:&#10;&#10;Project Structure &amp; Best Practices:&#10;&#10;Transitioned the project to a professional directory structure (/data, /scripts, /archive) to enforce separation of concerns.&#10;&#10;Authored the DEVELOPMENT_GUIDE.md, formalizing our coding standards, Git workflow, and architectural principles.&#10;&#10;Upgraded the development workflow to use the integrated Git client within the PyCharm Professional IDE.&#10;&#10;Final Data Consolidation:&#10;&#10;Developed and executed robust scripts to merge the two vaults (merge_master_vaults_with_logging.py), creating a detailed log of the process.&#10;&#10;Developed and executed the final ID assignment script (assign_master_ids.py) to apply globally unique IDs to all 3,808 objects in the master vault.&#10;&#10;Successfully debugged runtime errors during the ID assignment process, making the script more robust against inconsistent data types.&#10;&#10;Documentation &amp; Toolkit Refinement:&#10;&#10;Updated the project's README.md to reflect the current status.&#10;&#10;Updated the re-initialization prompt to mark the completion of the data buildout milestone.&#10;&#10;Added the official ID Naming Convention to the VAULT_GUIDE.md.&#10;&#10;Created several new utility scripts, including a dedicated JSON formatter and a powerful, read-only search tool (find_key_value.py).&#10;&#10;With the backend data now stable and complete, the project is officially ready to move into Phase 1: Web Application Development.">
      <option name="closed" value="true" />
      <created>1752609287576</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1752609287576</updated>
    </task>
    <task id="LOCAL-00003" summary="Phase 1 Kick-off &amp; Local Environment Setup&#10;&#10;Date: 15 July 2025&#10;&#10;Summary:&#10;This commit marks the official start of Phase 1 development. The primary achievement is the successful configuration of the local development environment on the main workstation, paving the way for API development.&#10;&#10;Project Alignment: Reviewed all core project documents (Project Plan, Tech Stack, Development Guide) to ensure full alignment on goals and practices.&#10;&#10;Documentation Update: Revised the DEVELOPMENT_GUIDE.md to reflect the project's move to a single, definitive vault_master.json file.&#10;&#10;Framework Confirmation: Re-assessed and confirmed that Flask is the optimal web framework for the project's needs.&#10;&#10;Environment Setup: Successfully configured the project within PyCharm, verified the existing virtual environment, and installed Flask and its dependencies.&#10;&#10;Verification: Confirmed the end-to-end environment setup by successfully running a test Flask development server.&#10;&#10;The project is now primed for the development of the vault API endpoint.">
      <option name="closed" value="true" />
      <created>1752609837094</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1752609837094</updated>
    </task>
    <task id="LOCAL-00004" summary="Subject: Implement Multi-Select Checkbox Filters &amp; Harden JS Logic&#10;&#10;Date: 25 July 2025&#10;&#10;Summary:&#10;This commit marks the successful completion of Task 3.2, the implementation of the core filtering functionality for the application. The sidebar is now populated with dynamically generated, multi-select checkboxes for both families and tags, allowing for powerful, layered searches.&#10;&#10;Feature Implementation:&#10;&#10;Developed a JavaScript function to dynamically scan the vault data, extract all unique families and tags, and render them as alphabetized checkbox groups in the UI.&#10;&#10;Refactored the core filtering logic into a unified pipeline that now combines the live text search with the new multi-select checkbox filters.&#10;&#10;Implemented &quot;AND&quot; logic for the checkbox filters, ensuring that only plugins matching all selected criteria are displayed.&#10;&#10;Code Hardening &amp; Debugging:&#10;&#10;During implementation, a series of TypeError exceptions were identified, caused by data integrity inconsistencies in the vault_master.json file.&#10;&#10;The JavaScript functions (handleSearch, populateFilters, renderCards) were significantly refactored to be more &quot;defensive.&quot; They now gracefully handle cases where developer, families, or tags fields contain unexpected data types (e.g., arrays, non-string values), preventing script crashes.&#10;&#10;The application's core filtering mechanism is now complete and resilient. The project is ready to proceed to the next task in Phase 3.">
      <option name="closed" value="true" />
      <created>1753563499781</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1753563499781</updated>
    </task>
    <task id="LOCAL-00005" summary="Subject: Implement Multi-Select Checkbox Filters &amp; Harden JS Logic&#10;&#10;Date: 25 July 2025&#10;&#10;Summary:&#10;This commit marks the successful completion of Task 3.2, the implementation of the core filtering functionality for the application. The sidebar is now populated with dynamically generated, multi-select checkboxes for both families and tags, allowing for powerful, layered searches.&#10;&#10;Feature Implementation:&#10;&#10;Developed a JavaScript function to dynamically scan the vault data, extract all unique families and tags, and render them as alphabetized checkbox groups in the UI.&#10;&#10;Refactored the core filtering logic into a unified pipeline that now combines the live text search with the new multi-select checkbox filters.&#10;&#10;Implemented &quot;AND&quot; logic for the checkbox filters, ensuring that only plugins matching all selected criteria are displayed.&#10;&#10;Code Hardening &amp; Debugging:&#10;&#10;During implementation, a series of TypeError exceptions were identified, caused by data integrity inconsistencies in the vault_master.json file.&#10;&#10;The JavaScript functions (handleSearch, populateFilters, renderCards) were significantly refactored to be more &quot;defensive.&quot; They now gracefully handle cases where developer, families, or tags fields contain unexpected data types (e.g., arrays, non-string values), preventing script crashes.&#10;&#10;The application's core filtering mechanism is now complete and resilient. The project is ready to proceed to the next task in Phase 3.">
      <option name="closed" value="true" />
      <created>1753563699435</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1753563699435</updated>
    </task>
    <task id="LOCAL-00006" summary="Subject: Implement Multi-Select Checkbox Filters &amp; Harden JS Logic&#10;&#10;Date: 25 July 2025&#10;&#10;Summary:&#10;This commit marks the successful completion of Task 3.2, the implementation of the core filtering functionality for the application. The sidebar is now populated with dynamically generated, multi-select checkboxes for both families and tags, allowing for powerful, layered searches.&#10;&#10;Feature Implementation:&#10;&#10;Developed a JavaScript function to dynamically scan the vault data, extract all unique families and tags, and render them as alphabetized checkbox groups in the UI.&#10;&#10;Refactored the core filtering logic into a unified pipeline that now combines the live text search with the new multi-select checkbox filters.&#10;&#10;Implemented &quot;AND&quot; logic for the checkbox filters, ensuring that only plugins matching all selected criteria are displayed.&#10;&#10;Code Hardening &amp; Debugging:&#10;&#10;During implementation, a series of TypeError exceptions were identified, caused by data integrity inconsistencies in the vault_master.json file.&#10;&#10;The JavaScript functions (handleSearch, populateFilters, renderCards) were significantly refactored to be more &quot;defensive.&quot; They now gracefully handle cases where developer, families, or tags fields contain unexpected data types (e.g., arrays, non-string values), preventing script crashes.&#10;&#10;The application's core filtering mechanism is now complete and resilient. The project is ready to proceed to the next task in Phase 3.&#10;&#10;Signed-off-by: Drew Campbell &lt;drew@subscotia.net&gt;">
      <option name="closed" value="true" />
      <created>1753563731028</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1753563731028</updated>
    </task>
    <task id="LOCAL-00007" summary="Subject: Implement Multi-Select Checkbox Filters &amp; Harden JS Logic&#10;&#10;Date: 25 July 2025&#10;&#10;Summary:&#10;This commit marks the successful completion of Task 3.2, the implementation of the core filtering functionality for the application. The sidebar is now populated with dynamically generated, multi-select checkboxes for both families and tags, allowing for powerful, layered searches.&#10;&#10;Feature Implementation:&#10;&#10;Developed a JavaScript function to dynamically scan the vault data, extract all unique families and tags, and render them as alphabetized checkbox groups in the UI.&#10;&#10;Refactored the core filtering logic into a unified pipeline that now combines the live text search with the new multi-select checkbox filters.&#10;&#10;Implemented &quot;AND&quot; logic for the checkbox filters, ensuring that only plugins matching all selected criteria are displayed.&#10;&#10;Code Hardening &amp; Debugging:&#10;&#10;During implementation, a series of TypeError exceptions were identified, caused by data integrity inconsistencies in the vault_master.json file.&#10;&#10;The JavaScript functions (handleSearch, populateFilters, renderCards) were significantly refactored to be more &quot;defensive.&quot; They now gracefully handle cases where developer, families, or tags fields contain unexpected data types (e.g., arrays, non-string values), preventing script crashes.&#10;&#10;The application's core filtering mechanism is now complete and resilient. The project is ready to proceed to the next task in Phase 3.&#10;&#10;Signed-off-by: Drew Campbell &lt;drew@subscotia.net&gt;">
      <option name="closed" value="true" />
      <created>1753710778933</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1753710778933</updated>
    </task>
    <task id="LOCAL-00008" summary="Git Commit Journal EntrySubject: Phase 4 Complete - Data Management InterfaceDate: 30 July 2025Summary:This commit marks the successful completion of Phase 4. The application has been extended from a read-only tool to a fully-fledged data management interface. A user can now add new plugin entries directly through the web UI, with the data being safely processed and saved on the backend.Task 4.1: &quot;Add New Plugin&quot; Form UI:A new &quot;Add Plugin&quot; button was added to the header.A comprehensive modal form was designed and built with input fields for all necessary plugin data, adhering to our established themes.Task 4.2: Backend API Endpoint:A new API endpoint (/api/plugin) was created in the Flask application, configured to accept POST requests.The endpoint was successfully tested to receive and parse JSON data submitted from the frontend form.Task 4.3: Save Logic Implementation:A shared utils.py module was created to house a save_vault_with_backup function, adhering to our &quot;safe save&quot; best practice.The backend was enhanced with logic to generate a new, globally unique ID for each submitted plugin, following the schema in VAULT_GUIDE.md.The /api/plugin endpoint now uses these utilities to append the new plugin to the vault_master.json file and create a timestamped backup.Task 4.4: Auto-Refresh UI:The frontend JavaScript was updated to handle the success response from the backend.Upon a successful save, the application now automatically adds the new plugin to its in-memory data, re-populates the filter lists, and re-renders the main plugin grid without requiring a page reload.A significant ReferenceError was diagnosed and resolved, leading to a more robust, correctly-scoped script structure.The application's core feature set for local management is now complete. The project is ready to proceed to the final phase: production deployment.">
      <option name="closed" value="true" />
      <created>1753909425631</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1753909425631</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Work Report: 15 July 2025&#10;Milestone Reached: Backend Data Buildout Complete&#10;&#10;This commit marks the completion of the data population and cleaning phase for the Subscotia Vault. The ivault and xvault are now finalized and have been merged into a single, definitive vault_master.json. All objects have been assigned a final, globally unique ID according to the established convention.&#10;&#10;Key Achievements in this Commit:&#10;&#10;Project Structure &amp; Best Practices:&#10;&#10;Transitioned the project to a professional directory structure (/data, /scripts, /archive) to enforce separation of concerns.&#10;&#10;Authored the DEVELOPMENT_GUIDE.md, formalizing our coding standards, Git workflow, and architectural principles.&#10;&#10;Upgraded the development workflow to use the integrated Git client within the PyCharm Professional IDE.&#10;&#10;Final Data Consolidation:&#10;&#10;Developed and executed robust scripts to merge the two vaults (merge_master_vaults_with_logging.py), creating a detailed log of the process.&#10;&#10;Developed and executed the final ID assignment script (assign_master_ids.py) to apply globally unique IDs to all 3,808 objects in the master vault.&#10;&#10;Successfully debugged runtime errors during the ID assignment process, making the script more robust against inconsistent data types.&#10;&#10;Documentation &amp; Toolkit Refinement:&#10;&#10;Updated the project's README.md to reflect the current status.&#10;&#10;Updated the re-initialization prompt to mark the completion of the data buildout milestone.&#10;&#10;Added the official ID Naming Convention to the VAULT_GUIDE.md.&#10;&#10;Created several new utility scripts, including a dedicated JSON formatter and a powerful, read-only search tool (find_key_value.py).&#10;&#10;With the backend data now stable and complete, the project is officially ready to move into Phase 1: Web Application Development." />
    <MESSAGE value="Phase 1 Kick-off &amp; Local Environment Setup&#10;&#10;Date: 15 July 2025&#10;&#10;Summary:&#10;This commit marks the official start of Phase 1 development. The primary achievement is the successful configuration of the local development environment on the main workstation, paving the way for API development.&#10;&#10;Project Alignment: Reviewed all core project documents (Project Plan, Tech Stack, Development Guide) to ensure full alignment on goals and practices.&#10;&#10;Documentation Update: Revised the DEVELOPMENT_GUIDE.md to reflect the project's move to a single, definitive vault_master.json file.&#10;&#10;Framework Confirmation: Re-assessed and confirmed that Flask is the optimal web framework for the project's needs.&#10;&#10;Environment Setup: Successfully configured the project within PyCharm, verified the existing virtual environment, and installed Flask and its dependencies.&#10;&#10;Verification: Confirmed the end-to-end environment setup by successfully running a test Flask development server.&#10;&#10;The project is now primed for the development of the vault API endpoint." />
    <MESSAGE value="Subject: Implement Multi-Select Checkbox Filters &amp; Harden JS Logic&#10;&#10;Date: 25 July 2025&#10;&#10;Summary:&#10;This commit marks the successful completion of Task 3.2, the implementation of the core filtering functionality for the application. The sidebar is now populated with dynamically generated, multi-select checkboxes for both families and tags, allowing for powerful, layered searches.&#10;&#10;Feature Implementation:&#10;&#10;Developed a JavaScript function to dynamically scan the vault data, extract all unique families and tags, and render them as alphabetized checkbox groups in the UI.&#10;&#10;Refactored the core filtering logic into a unified pipeline that now combines the live text search with the new multi-select checkbox filters.&#10;&#10;Implemented &quot;AND&quot; logic for the checkbox filters, ensuring that only plugins matching all selected criteria are displayed.&#10;&#10;Code Hardening &amp; Debugging:&#10;&#10;During implementation, a series of TypeError exceptions were identified, caused by data integrity inconsistencies in the vault_master.json file.&#10;&#10;The JavaScript functions (handleSearch, populateFilters, renderCards) were significantly refactored to be more &quot;defensive.&quot; They now gracefully handle cases where developer, families, or tags fields contain unexpected data types (e.g., arrays, non-string values), preventing script crashes.&#10;&#10;The application's core filtering mechanism is now complete and resilient. The project is ready to proceed to the next task in Phase 3." />
    <MESSAGE value="Subject: Implement Multi-Select Checkbox Filters &amp; Harden JS Logic&#10;&#10;Date: 25 July 2025&#10;&#10;Summary:&#10;This commit marks the successful completion of Task 3.2, the implementation of the core filtering functionality for the application. The sidebar is now populated with dynamically generated, multi-select checkboxes for both families and tags, allowing for powerful, layered searches.&#10;&#10;Feature Implementation:&#10;&#10;Developed a JavaScript function to dynamically scan the vault data, extract all unique families and tags, and render them as alphabetized checkbox groups in the UI.&#10;&#10;Refactored the core filtering logic into a unified pipeline that now combines the live text search with the new multi-select checkbox filters.&#10;&#10;Implemented &quot;AND&quot; logic for the checkbox filters, ensuring that only plugins matching all selected criteria are displayed.&#10;&#10;Code Hardening &amp; Debugging:&#10;&#10;During implementation, a series of TypeError exceptions were identified, caused by data integrity inconsistencies in the vault_master.json file.&#10;&#10;The JavaScript functions (handleSearch, populateFilters, renderCards) were significantly refactored to be more &quot;defensive.&quot; They now gracefully handle cases where developer, families, or tags fields contain unexpected data types (e.g., arrays, non-string values), preventing script crashes.&#10;&#10;The application's core filtering mechanism is now complete and resilient. The project is ready to proceed to the next task in Phase 3.&#10;&#10;Signed-off-by: Drew Campbell &lt;drew@subscotia.net&gt;" />
    <MESSAGE value="Merge remote-tracking branch 'origin/master'" />
    <MESSAGE value="Git Commit Journal EntrySubject: Phase 4 Complete - Data Management InterfaceDate: 30 July 2025Summary:This commit marks the successful completion of Phase 4. The application has been extended from a read-only tool to a fully-fledged data management interface. A user can now add new plugin entries directly through the web UI, with the data being safely processed and saved on the backend.Task 4.1: &quot;Add New Plugin&quot; Form UI:A new &quot;Add Plugin&quot; button was added to the header.A comprehensive modal form was designed and built with input fields for all necessary plugin data, adhering to our established themes.Task 4.2: Backend API Endpoint:A new API endpoint (/api/plugin) was created in the Flask application, configured to accept POST requests.The endpoint was successfully tested to receive and parse JSON data submitted from the frontend form.Task 4.3: Save Logic Implementation:A shared utils.py module was created to house a save_vault_with_backup function, adhering to our &quot;safe save&quot; best practice.The backend was enhanced with logic to generate a new, globally unique ID for each submitted plugin, following the schema in VAULT_GUIDE.md.The /api/plugin endpoint now uses these utilities to append the new plugin to the vault_master.json file and create a timestamped backup.Task 4.4: Auto-Refresh UI:The frontend JavaScript was updated to handle the success response from the backend.Upon a successful save, the application now automatically adds the new plugin to its in-memory data, re-populates the filter lists, and re-renders the main plugin grid without requiring a page reload.A significant ReferenceError was diagnosed and resolved, leading to a more robust, correctly-scoped script structure.The application's core feature set for local management is now complete. The project is ready to proceed to the final phase: production deployment." />
    <option name="LAST_COMMIT_MESSAGE" value="Git Commit Journal EntrySubject: Phase 4 Complete - Data Management InterfaceDate: 30 July 2025Summary:This commit marks the successful completion of Phase 4. The application has been extended from a read-only tool to a fully-fledged data management interface. A user can now add new plugin entries directly through the web UI, with the data being safely processed and saved on the backend.Task 4.1: &quot;Add New Plugin&quot; Form UI:A new &quot;Add Plugin&quot; button was added to the header.A comprehensive modal form was designed and built with input fields for all necessary plugin data, adhering to our established themes.Task 4.2: Backend API Endpoint:A new API endpoint (/api/plugin) was created in the Flask application, configured to accept POST requests.The endpoint was successfully tested to receive and parse JSON data submitted from the frontend form.Task 4.3: Save Logic Implementation:A shared utils.py module was created to house a save_vault_with_backup function, adhering to our &quot;safe save&quot; best practice.The backend was enhanced with logic to generate a new, globally unique ID for each submitted plugin, following the schema in VAULT_GUIDE.md.The /api/plugin endpoint now uses these utilities to append the new plugin to the vault_master.json file and create a timestamped backup.Task 4.4: Auto-Refresh UI:The frontend JavaScript was updated to handle the success response from the backend.Upon a successful save, the application now automatically adds the new plugin to its in-memory data, re-populates the filter lists, and re-renders the main plugin grid without requiring a page reload.A significant ReferenceError was diagnosed and resolved, leading to a more robust, correctly-scoped script structure.The application's core feature set for local management is now complete. The project is ready to proceed to the final phase: production deployment." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/vault_project$format_json.coverage" NAME="format_json Coverage Results" MODIFIED="1752527080730" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$reset_ids.coverage" NAME="reset_ids Coverage Results" MODIFIED="1752591224074" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$remove_value_from_list_field.coverage" NAME="remove_value_from_list_field Coverage Results" MODIFIED="1752589501986" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$replace_family_labels.coverage" NAME="replace_family_labels Coverage Results" MODIFIED="1752588569018" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$find_max_catalog_id.coverage" NAME="find_max_catalog_id Coverage Results" MODIFIED="1753710909956" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$assign_master_ids.coverage" NAME="assign_master_ids Coverage Results" MODIFIED="1752594781452" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$app.coverage" NAME="app Coverage Results" MODIFIED="1754149788115" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/webapp" />
    <SUITE FILE_PATH="coverage/vault_project$find_key_value.coverage" NAME="find_key_value Coverage Results" MODIFIED="1752588786311" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$list_unique_values_REFACT.coverage" NAME="list_unique_values_REFACT Coverage Results" MODIFIED="1752576210735" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$merge_master_vaults.coverage" NAME="merge_master_vaults Coverage Results" MODIFIED="1752591576547" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$list_unique_types.coverage" NAME="list_unique_types Coverage Results" MODIFIED="1752591818519" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/vault_project$list_unique_families.coverage" NAME="list_unique_families Coverage Results" MODIFIED="1752589454108" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
  </component>
</project>